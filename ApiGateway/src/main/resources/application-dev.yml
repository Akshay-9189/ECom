server:
  port: 9000

spring:
  cloud:
    #    discovery:
    #      enabled: true
    gateway:
      #      discovery:
      #        locator:
      #          enabled: true
      # default-filters:
      #  - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
      #  - AddResponseHeader=Access-Control-Allow-Origin, http://localhost:8000
      #      globalcors:
      #        cors-configurations:
      #          '[/**]':
      #            allowedOrigins:
      #              - "http://localhost:8000"
      #            allowedMethods:
      #              - GET
      #              - POST
      #              - DELETE
      #              - PUT
      #              - PATCH
      #            allowCredentials: true
      #            allowedHeaders: "*"

      routes:
        # Route For User Services
        - id: UserService
          uri: lb://UserService
          predicates:
            - Path=/public/**,/user/**
          filters:
            #            - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
            - name: CircuitBreaker
              args:
                name: UserService
                fallbackuri: forward:/userfallback

        # Route For Product Service
        - id: ProductService
          uri: lb://ProductService
          predicates:
            - Path=/product/**,/category/**,/sub-category/**
          filters:
            #            - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
            - name: CircuitBreaker
              args:
                name: ProductService
                fallbackuri: forward:/productfallback

        # Route For Cart Service
        - id: CartService
          uri: lb://CartService
          predicates:
            - Path=/cart/**,/cartItems/**,/coupon/**
          filters:
            #            - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
            - name: CircuitBreaker
              args:
                name: CartService
                fallbackuri: forward:/cartfallback

        # Route For Order Service
        - id: OrderService
          uri: lb://OrderService
          predicates:
            - Path=/order/**
          filters:
            #            - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
            - name: CircuitBreaker
              args:
                name: OrderService
                fallbackuri: forward:/orderfallback

        # Route For Wishlist Service
        - id: WishListService
          uri: lb://WishListService
          predicates:
            - Path=/wishlist/**
          filters:
            #            - AddRequestHeader=Access-Control-Allow-Origin, http://localhost:8000
            - name: CircuitBreaker
              args:
                name: WishListService
                fallbackuri: forward:/wishlistfallback

# Hystrix
hystrix:
  command:
    fallbackcmd:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000

# Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"

  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always

# Eureka Server Configuration
eureka:
  client:
    fetch-register: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
    prefer-ip-address: true